/* 
  조이스틱 센서 쉴드 핀 구성
  조이스틱 센서 쉴드는 쉴드 형태의 보드이므로, 오렌지보드 결합 후 아래 소자 사용 시 정해진 핀을 사용하셔야 합니다.
    - Joystick X : A0
    - Joystick Y : A1
    - Joystick Button : D10
    - A Button : A2
    - B Button : A3 
    - C Button : D8
    - D Button : D9
    - Left Button : D4
    - Right Button : D5
    - Dial Variable Resistor : A4
    - Piezo Buzzer : D6 
    - Vibration Motor : D7
    - Photoresistor : A5
    - LED 1 : D2
    - LED 2 : D3 
    - LED 3 : D11 
    - LED 4 : D12
    - LED 5 : D13
*/

// Joystick X를 A0으로 설정합니다.
const int joyStickX = A0;
// Joystick Y를 A1으로 설정합니다. 
const int joyStickY = A1;
// A Button을 A2으로 설정합니다. 
const int AButton = A2;
// B Button을 A3으로 설정합니다. 
const int BButton = A3;
// C Button을 D8으로 설정합니다.
const int CButton = 8;
// D Button을 D9으로 설정합니다. 
const int DButton = 9;
// left Button을 D4로 설정합니다. 
const int leftButton = 4; 
// right Button을 D5로 설정합니다. 
const int rightButton = 5;
// 부저를 D6으로 설정합니다.
const int piezo = 6;
// 톤 배열 수
int numTones = 8;
// 음계 표준 주파수(4옥타브) : 도, 레, 미, 파, 솔, 라, 시, 도
int tones[] = {261, 294, 330, 349, 392, 440, 494, 523};
#define DELAY 100
  
void setup(){
  // 시리얼 통신을 위해 통신 속도를 9600 bps로 설정합니다.
  Serial.begin(9600); 
  // leftButton을 입력 핀으로 설정합니다.
  pinMode(leftButton, INPUT_PULLUP);
  // rightButton을 입력 핀으로 설정합니다. 
  pinMode(rightButton, INPUT_PULLUP);
  // C Button을 입력 핀으로 설정합니다.
  pinMode(CButton, INPUT_PULLUP);
  // D Button을 입력 핀으로 설정합니다.
  pinMode(DButton, INPUT_PULLUP);
  pinMode(piezo, OUTPUT);
}

void loop(){
  // Joystick X에서 읽어온 값을 x_Value에 저장합니다.
  int x_Value = analogRead(joyStickX);
  // Joystick Y에서 읽어온 값을 y_Value에 저장합니다. 
  int y_Value = analogRead(joyStickY);
  
  if(y_Value > 750){
    // 조이스틱 모듈을 좌측 상단으로 움직였다면
    if (x_Value < 350) { 
      // 프로세싱에 q 데이터를 전송합니다.
      Serial.write('q');
      delay(DELAY);
    } 
    
      // 조이스틱 모듈을 우측 상단으로 움직였다면
      else if (x_Value > 750) { 
        // 프로세싱에 e 데이터를 전송합니다. 
      Serial.write('e');
      delay(DELAY);
      } 
    
      // 조이스틱 모듈을 위로 움직였다면
      else { 
        // 프로세싱에 V 데이터를 전송합니다. 
      Serial.write('V');
      delay(DELAY);
      }   
    }

  else if(y_Value < 350){
    // 조이스틱 모듈을 좌측 하단으로 움직였다면
    if (x_Value < 350) { 
      // 프로세싱에 z 데이터를 전송합니다.
      Serial.write('z');
          delay(DELAY);
      } 
      // 조이스틱 모듈을 우측 하단으로 움직였다면
      else if (x_Value > 750) { 
        // 프로세싱에 c 데이터를 전송합니다. 
          Serial.write('c');
          delay(DELAY);
      } 
    
    // 조이스틱 모듈을 아래로 움직였다면
      else{
        // 프로세싱에 v 데이터를 전송합니다. 
        Serial.write('v');
        delay(DELAY);      
      }
  }

  else{
    // 조이스틱 모듈을 왼쪽으로 움직였다면
      if (x_Value < 350) { 
        // 프로세싱에 h 데이터를 전송합니다. 
          Serial.write('h');
          delay(DELAY);
      } 
      
      // 조이스틱 모듈을 오른쪽으로 움직였다면
      else if (x_Value > 750) { 
        // 프로세싱에 H 데이터를 전송합니다. 
          Serial.write('H');
          delay(DELAY);
      }
    
    // 조이스틱 모듈이 정중앙에 위치한다면
      else{
        // 프로세싱에 S 데이터를 전송합니다. 
          Serial.write('S');
          delay(DELAY);
      }
  }

  // A Button이 눌렸다면
  if (analogRead(AButton) == LOW) {
    // 프로세싱에 l 데이터를 전송합니다. 
      Serial.write('l');
      delay(DELAY);
    }
    // B Button이 눌렸다면
  if (analogRead(BButton) == LOW) {
    // 프로세싱에 d 데이터를 전송합니다. 
      Serial.write('d');   
      delay(DELAY);
    }
  // C Button이 눌렸다면
    if (digitalRead(CButton) == LOW) {
      // 프로세싱에 r 데이터를 전송합니다. 
      Serial.write('r');
      delay(DELAY);
    }
  // D Button이 눌렸다면
  if (digitalRead(DButton) == LOW) {
    // 프로세싱에 u 데이터를 전송합니다.
      Serial.write('u');
      delay(DELAY);
    }
    // right Button이 눌렸다면
    if (digitalRead(rightButton) == LOW) {
      // 프로세싱에 t 데이터를 전송합니다. 
      Serial.write('t');
      delay(DELAY);   
    }
    // left Button이 눌렸다면
    if (digitalRead(leftButton) == LOW) {
      // 프로세싱에 p 데이터를 전송합니다. 
      Serial.write('p');
      delay(DELAY);
      for (int i = 0; i < numTones; i++) {
      // 피에조 부저가 연결된 핀으로 지정된 주파수를 가지는 square-wave(구형파 또는 사각파)플 생성하도록 설정합니다.
      // 도가 261Hz의 주파수를 가진다면, 1초에 261번의 square-wave을 발생신킨다는 의미입니다.
          // 디지털은 0 과 1 (HIGH와 LOW)로 표현이되므로, 1초 동안에 0과 1의 변화를 261번 주는 것과 같습니다.
      tone(piezo, tones[i]);
      // 0.5초 동안 대기합니다.
      delay(500);
    }
      noTone(piezo);
    }
  
    else{
      Serial.write('\n');
      delay(DELAY);
    }
}